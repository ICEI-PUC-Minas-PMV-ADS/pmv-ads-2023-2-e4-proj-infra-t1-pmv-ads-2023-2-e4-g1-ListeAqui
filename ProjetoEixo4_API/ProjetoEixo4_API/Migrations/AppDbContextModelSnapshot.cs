// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoEixo4_API.Models;

#nullable disable

namespace ProjetoEixo4_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoEixo4_API.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("PassWord");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("longtext");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Metodo")
                        .HasColumnType("longtext");

                    b.Property<string>("Rel")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDaLista")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mercado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeDaLista")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Listas");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.ListaClientes", b =>
                {
                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("ListaId", "ClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("ListaClientes");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Item", b =>
                {
                    b.HasOne("ProjetoEixo4_API.Models.Lista", "lista")
                        .WithMany("Itens")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lista");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.LinkDto", b =>
                {
                    b.HasOne("ProjetoEixo4_API.Models.Item", null)
                        .WithMany("Links")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.ListaClientes", b =>
                {
                    b.HasOne("ProjetoEixo4_API.Models.Cliente", "Cliente")
                        .WithMany("Listas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoEixo4_API.Models.Lista", "Lista")
                        .WithMany("Clientes")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Cliente", b =>
                {
                    b.Navigation("Listas");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Item", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("ProjetoEixo4_API.Models.Lista", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
